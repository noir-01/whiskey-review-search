services:
  backend_lts:
    build:
      context: ./backend/review-api
    network_mode: host
    image: whiskey-backend:v2.0
    restart: always
    container_name: whiskey-backend-lts
    
  frontend_lts:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    network_mode: host
    image: whiskey-frontend:v2.0
    restart: always
    container_name: whiskey-frontend-lts
    
  elasticsearch:
    build: ./elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    network_mode: host
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200 || exit 1"]
      interval: 10s
      retries: 5

  logstash:
    env_file:
      - ./elasticsearch/logstash.env
    image: docker.elastic.co/logstash/logstash:8.9.0
    depends_on:
      init-elasticsearch:
        condition: service_completed_successfully
    network_mode: host
    ports:
      - "5044:5044"
    volumes:
      - ./elasticsearch/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elasticsearch/mysql-connector-j.jar:/usr/share/logstash/mysql-connector-java.jar
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    
  init-elasticsearch:
    image: curlimages/curl:latest
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./elasticsearch/init-es.sh:/init-es.sh
    command: ["/bin/sh", "/init-es.sh"]
    network_mode: host

  logstash-once:
    image: docker.elastic.co/logstash/logstash:8.9.0
    profiles: ["manual"]
    network_mode: host
    volumes:
      - ./elasticsearch/logstash_once.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elasticsearch/mysql-connector-j.jar:/usr/share/logstash/mysql-connector-java.jar:ro
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx256m"
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf

volumes:
  es-data: